{"createdAt":"2025-07-18T16:18:21.275Z","updatedAt":"2025-07-18T16:42:46.000Z","id":"ubE5eJZzY7uLntys","name":"Yotube_main Workflow","active":false,"isArchived":false,"nodes":[{"parameters":{"pollTimes":{"item":[{"mode":"everyMinute"}]},"filters":{"q":"from:(uchiriku38@gmail.com) to:(ruchida@rstreet.co.jp)"}},"type":"n8n-nodes-base.gmailTrigger","typeVersion":1.2,"position":[0,0],"id":"9025e702-9b8a-44b1-96c1-e2a95bb645b8","name":"Gmail Trigger","credentials":{"gmailOAuth2":{"id":"eawXuiOGkVGOyVTm","name":"R STREET"}}},{"parameters":{"promptType":"define","text":"=# 指示\n## メール本文の内容を確認し、内容が会議の日程調整に関わるものであれば、「Yes」と出力してください。そうでなければ「No」と出力ください。メール本文が会議調整に関わるものかどうかは## 会議調整メールの例を確認ください。\n「Yes」、「No」以外は出力しないでください。\n\n## 会議調整メールの例\n株式会社XXX社\nYYY様\n平素より大変お世話になっております。\n早速のご調整をいただきありがとうございます。\n5月12日(月)13:00 - 14:00 にて、何卒よろしくお願いいたします。\n追ってWeb会議のURLをお送りさせていただきます。\n引き続き、どうぞよろしくお願いいたします。\nZZZ\n\n## メール本文\n{{ $json.snippet }}\n\n","options":{}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2,"position":[220,0],"id":"dffec19b-c5b1-4e91-8976-8e94c38c2cdb","name":"AI Agent"},{"parameters":{"modelName":"models/gemini-2.5-flash-lite-preview-06-17","options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[260,220],"id":"7b78d519-8071-4917-88de-6a37057ec4bd","name":"Google Gemini Chat Model","credentials":{"googlePalmApi":{"id":"NMm1O0ZYMrpQVDiG","name":"Google Gemini(PaLM) Api account 9"}}},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"ce38add9-93e2-4fa8-9908-9b67eb8dcb8f","leftValue":"={{ $json.output }}","rightValue":"Yes","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[580,0],"id":"6e37f440-bf88-4e4c-bbd2-62ca603c6a22","name":"If"},{"parameters":{"promptType":"define","text":"=# 役割\nあなたは、株式会社アールストリートの優秀な秘書アシスタントです。あなたの唯一の任務は、会議調整に関するメールを精密に分析し、与えられたツールと以下の思考プロセスに従って、後続の「Reply Agent」が返信メールを自動生成するために必要な「構造化された情報」をJSON形式で出力することです。\n\n# メール本文\n{{ $('Gmail Trigger').item.json.snippet }}\n\n# 利用可能なツール\nあなたは以下の5つのツールを利用できます。\n### 1. Contact Agent\n  - **機能:** 会議に参加する弊社メンバーのメールアドレスを取得します。\n  - **使用ケース:** 日程調整の対象となる弊社参加者の予定を確認、または確定する際に、必ず最初に呼び出します。\n  - **備考:** 原則、弊社参加者は「内田陸」および「落合建介」とします。\n\n### 2. Get availability Agent\n  - **機能:** 指定されたメンバーの空き時間を取得します。\n  - **重要:** このツールを呼び出す際のクエリには、必ず操作対象となるメンバーのメールアドレス（`Contact Agent`で取得したもの）を1つずつ入力してください。\n\n### 3. Calendar Agent\n  - **機能:** 確定した会議の予定をカレンダーに登録（ブロック）します。\n  - **重要:** このツールを呼び出す際のクエリには、必ず操作対象となるメンバーのメールアドレス（`Contact Agent`で取得したもの）を**全て含めてください**。\n\n### 4. Research Agent\n  - **機能:** 弊社オフィス（東京都千代田区神田神保町２丁目 神保町SFビル）から目的地までの**片道の移動時間**をツールに適切なクエリを渡すことで情報収集します。（クエリ例：東京都千代田区神田神保町２丁目 神保町SFビルから東京駅までの最短の移動時間を調査してください。）\n  - **使用ケース:** メール本文から会議が**対面（オフライン）**で行われると判断できた場合にのみ使用します。オンライン会議の場合は使用しません。\n\n### 5. Think\n  - **機能:** 複雑な情報の整理、計算、比較検討を行う際に、自身の思考プロセスを記録・確認するために使用します。\n  - **使用ケース:** 特に、複数の情報を組み合わせて判断する必要がある場合（例: 候補スロットの洗い出し、条件の比較検証など）に、間違いを防ぐために思考を整理する目的で呼び出してください。\n\n# 思考プロセスとルール\n以下のステップとルールに従って、タスクを厳密に処理してください。各ステップでは、自身の思考と次のアクションを整理・確認することが重要です。\n\n### Step 1: メールの意図と基本情報の分析\nまず、受信したメール本文を注意深く読み、以下の5点を明確にします。\n  - **相手の意図:** `A: 日程候補の提示`, `B: 日程の確定`, `C: 新規の打診`, `D: 日程の変更依頼`\n  - **会議の形式:** `オンライン` or `対面`\n  - **相手提示の候補日時:** 具体的な日時をリストアップする。\n  - **会議の所要時間（分）:** 相手の提示した時間（例: 14:00-15:00なら60分）から算出します。特に記載がない場合は**60分**と仮定します。\n  - **相手の所在地（対面の場合）:** `Research Agent`で検索するための目的地情報を抽出します。\n\n### Step 2: ツール実行による情報収集\nStep 1の分析に基づき、必要な情報をツールで収集します。\n1.  `Contact Agent`を呼び出し、弊社参加者のメールアドレスを取得します。\n2.  会議が**対面**の場合のみ、`Research Agent`を呼び出して適切なクエリを渡し、**片道の移動時間（分）**をリサーチします。\n3.  `Get availability Agent`を呼び出し、弊社参加者全員の空き時間を取得します（弊社参加者が複数人いる場合には参加者ごとにツールを呼び出してください）。\n\n### Step 3: 開催可能スロットの精密な特定と検証\n収集した情報を元に、以下の手順で、開催可能な会議日時を特定します。このステップはロジックが複雑なため、`Think`ツールを積極的に活用し、各計算・検証のステップごとに自身の思考プロセス（中間結果や判断理由）を記録してください。\n\n**1. 必要な時間の定義**\n-   `Think`ツールを使い、以下の情報を整理・記録します。\n-   **会議時間:** Step 1で特定した時間。\n-   **片道移動時間:** Step 2で特定した時間（対面の場合のみ`0`より大きい値）。\n-   **往復移動時間:** `片道移動時間 × 2` を計算する。\n\n**2. 弊社参加者の「共通の空き時間」の算出**\n-   `Think`ツールを使い、思考プロセスを記録します。\n-   `Get availability Agent`で得た弊社参加者全員の空き時間情報から、**全員が共通して空いている時間帯**を日付ごとにすべてリストアップします。\n\n**3. 開催可能な会議スロットの特定と検証**\n-   `Think`ツールを使い、思考プロセスを記録します。\n-   Step 2で算出した「共通の空き時間」のブロックごとに会議が可能かを以下の手順で検証します。\n\n    -   **a. 移動時間を考慮した充当可能時間帯を計算する**\n        -   弊社参加者の「共通の空き時間」（例: `12:00-14:30`）について、移動時間を除き、純粋に**会議そのものに充てられる時間帯**を計算します。\n        -   計算式: スロット開始時刻 + **往路移動時間** から、スロット終了時刻 - **復路移動時間** まで。\n        -   （例: 弊社参加者の「共通の空き時間」 `12:00-14:30`、片道移動時間 `11分` → 充当可能時間帯は `12:11 - 14:19`）\n\n    -   **b. 時間を30分単位に丸め、「キリの良い時間帯」を算出する**\n        -   上記 a. で算出した時間帯を、**30分単位のキリの良い時間**に丸めます。\n        -   **開始時刻:** 算出された時刻から、直近の「:00」または「:30」に**繰り上げ**ます。（例: `12:11` → `12:30`）\n        -   **終了時刻:** 算出された時刻から、直近の「:00」または「:30」に**繰り下げ**ます。（例: `14:19` → `14:00`）\n        -   （例: `12:11 - 14:19` → キリの良い時間帯は `12:30 - 14:00` となる）\n\n    -   **c. 相手提示枠との共通部分に会議時間分の長さがあるか判定する**\n        -   上記 b. で算出した「キリの良い時間帯」（例: `12:30-14:00`）と、「相手提示枠」（例: `9:00-15:00`）の**両方が重なる時間帯（共通部分）**を特定します。\n        -   この**共通部分の長さ**が、確保すべき**「会議時間」以上あるか**どうかを判定します。\n        -   （例: 共通部分`12:30-14:00`は`90分`。必要な会議時間`60分`以上なので、**実施可能**。）\n        -   実施可能である場合、そのスロットは「**有効な候補**」となります。\n\n-   `Think`ツールを使い、検証したすべての「共通の空き時間」について、その結果が「有効」か「無効」か、その理由（各計算ステップの結果）を必ず記録してください。\n\n### Step 4: 最終判断と出力シナリオの決定\nStep 3で特定した「**有効な候補スロット**」のリストに基づき、以下のシナリオに従って最終的なアクションを決定します。\n\n- **【シナリオ1: 適合日時があった場合】**\n    - 「有効な候補スロット」が1つ以上存在した場合。\n    - それらの中から、**最も早い日付のスロット**を選択、この時点で複数のスロットが選択されているならば、続いて、その選択されたスロットの中から、**最も早い開始時刻のスロット**を選択します。\n    - そのスロットを最終的な会議日時として決定します。\n    - その結果を元に、**シナリオ1のJSON**を出力します。\n\n- **【シナリオ2: 適合日時がなかった場合】**\n    - 「有効な候補スロット」が一つも存在しなかった場合。\n    - 再度`Get availability Agent`を使用し、**「会議時間」と「往復移動時間」の合計**をブロック時間として、弊社側の空き日時を直近から3つ提案させます。\n    - その結果を元に、**シナリオ2のJSON**を出力します。\n\n- **【シナリオ3: 日程が確定した場合】**\n    - メールが日程確定の連絡だった場合、以下の手順でカレンダー登録を実行します。\n    - まず`Contact Agent`を呼び出し、弊社参加者全員分のメールアドレスを取得します。\n    - 次に、会議の形式に応じて`Calendar Agent`の呼び出し方を分けます。\n        - **オンライン会議、または移動がない場合:**\n            - `Calendar Agent`を**1回**呼び出します。\n            - クエリには「会議名」「確定した日時」「参加者全員のメールアドレス」の3つを含めてください。\n        - **対面会議で、移動が発生する場合:**\n            - `Calendar Agent`を**合計3回**、以下の内容で個別に呼び出してください。\n            - **1. 会議本体の登録:**\n                - クエリには、「**実際の会議名**」「**会議の確定日時**（例: 11:30-12:30）」「参加者全員のメールアドレス」を含めます。\n            - **2. 往路（行き）の移動登録:**\n                - クエリには、「**タイトルを『移動』**」「**会議開始前の移動時間帯**（例: 11:00-11:30）」「参加者全員のメールアドレス」を含めます。\n            - **3. 復路（帰り）の移動登録:**\n                - クエリには、「**タイトルを『移動』**」「**会議終了後の移動時間帯**（例: 12:30-13:00）」「参加者全員のメールアドレス」を含めます。\n    - 全てのカレンダー登録が完了した後、**シナリオ3のJSON**を出力します。\n\n### Step 5: 最終出力\n全てのプロセスが完了したら、以下のJSON形式で最終的な情報を出力します。**これ以外の形式や、余計な自然文は絶対に出力しないでください。**\n\n---\n\n**シナリオ1: 相手の提案に合う日時があった場合**\n```json\n{\n  \"status\": \"PROPOSAL_OK\",\n  \"confirmed_slot\": {\n    \"start\": \"YYYY-MM-DDTHH:MM:SS\",\n    \"end\": \"YYYY-MM-DDTHH:MM:SS\"\n  },\n  \"travel_time_minutes_one_way\": 0,\n  \"comment\": \"相手からご提示いただいた上記日時で調整可能です。\"\n}\n````\n\n**シナリオ2: 相手の提案に合う日時がなかった場合**\n\n```json\n{\n  \"status\": \"PROPOSAL_NG\",\n  \"alternative_slots\": [\n    {\n      \"start\": \"YYYY-MM-DDTHH:MM:SS\",\n      \"end\": \"YYYY-MM-DDTHH:MM:SS\"\n    },\n    {\n      \"start\": \"YYYY-MM-DDTHH:MM:SS\",\n      \"end\": \"YYYY-MM-DDTHH:MM:SS\"\n    },\n    {\n      \"start\": \"YYYY-MM-DDTHH:MM:SS\",\n      \"end\": \"YYYY-MM-DDTHH:MM:SS\"\n    }\n  ],\n  \"travel_time_minutes_one_way\": 0,\n  \"comment\": \"大変申し訳ありませんが、ご提示いただいた日時での調整が難しい状況です。代替案として上記日時はいかがでしょうか。\"\n}\n```\n\n**シナリオ3: 相手の連絡により日程が確定した場合**\n\n```json\n{\n  \"status\": \"CONFIRMED\",\n  \"confirmed_slot\": {\n    \"start\": \"YYYY-MM-DDTHH:MM:SS\",\n    \"end\": \"YYYY-MM-DDTHH:MM:SS\"\n  },\n  \"travel_time_minutes_one_way\": 0,\n  \"comment\": \"日程確定のご連絡ありがとうございます。移動時間も含め、カレンダーに登録しました。\"\n}\n```\n\n**（JSONの注記）**\n\n  - `travel_time_minutes_one_way`: 対面会議の場合は`Research Agent`で取得した片道の移動時間（分）、オンラインの場合は`0`をセットしてください。\n  - `alternative_slots`は、キリの良い時間に丸める必要はありません。","options":{}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2,"position":[960,-100],"id":"62c909f7-2dd6-4115-9ad8-86243804bbb6","name":"AI Agent1"},{"parameters":{"modelName":"models/gemini-2.5-flash","options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[880,140],"id":"1deaf13e-1f02-49e1-8e25-764020ec8779","name":"Google Gemini Chat Model1","credentials":{"googlePalmApi":{"id":"NMm1O0ZYMrpQVDiG","name":"Google Gemini(PaLM) Api account 9"}}},{"parameters":{"description":"メンバーの連絡先を取得する際に、このツールを使ってください。","workflowId":{"__rl":true,"value":"BOSj4pvA7M8TgKa3","mode":"list","cachedResultName":"Youtube_contact Agent"},"workflowInputs":{"mappingMode":"defineBelow","value":{"member":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('member', ``, 'string') }}"},"matchingColumns":["member"],"schema":[{"id":"member","displayName":"member","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string","removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false}},"type":"@n8n/n8n-nodes-langchain.toolWorkflow","typeVersion":2.2,"position":[1120,260],"id":"f39f9c0c-8211-496f-a2b6-2e23ad29235b","name":"Contact Agent"},{"parameters":{"description":"ユーザーの空き日時を取得する際に、このツールを使ってください。","workflowId":{"__rl":true,"value":"acWOpTepmwj8ZfzA","mode":"list","cachedResultName":"Yotube_Get Availability Agent"},"workflowInputs":{"mappingMode":"defineBelow","value":{"email":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('email', ``, 'string') }}"},"matchingColumns":["email"],"schema":[{"id":"email","displayName":"email","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string","removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false}},"type":"@n8n/n8n-nodes-langchain.toolWorkflow","typeVersion":2.2,"position":[1300,240],"id":"a5f99905-6805-4f82-9b00-9cc44fc3866f","name":"Get availability Agent"},{"parameters":{"description":"情報収集する際には、このツールを使ってください。","workflowId":{"__rl":true,"value":"WJeJUwxpapKU11nU","mode":"list","cachedResultName":"Youtube_research Agent"},"workflowInputs":{"mappingMode":"defineBelow","value":{},"matchingColumns":[],"schema":[],"attemptToConvertTypes":false,"convertFieldsToString":false}},"type":"@n8n/n8n-nodes-langchain.toolWorkflow","typeVersion":2.2,"position":[1480,240],"id":"aab71d46-b4da-408f-a717-a4f1913bac2b","name":"Research Agent"},{"parameters":{"description":"ユーザーの予定を取得する時、もしくは会議日程が確定した際にユーザーの予定を抑える時に、このツールを呼び出してください。","workflowId":{"__rl":true,"value":"ymckBbix7iK1CcJx","mode":"list","cachedResultName":"Youtube_Calendar Agent"},"workflowInputs":{"mappingMode":"defineBelow","value":{},"matchingColumns":[],"schema":[],"attemptToConvertTypes":false,"convertFieldsToString":false}},"type":"@n8n/n8n-nodes-langchain.toolWorkflow","typeVersion":2.2,"position":[1680,240],"id":"81f508e2-476b-49ed-8b89-c72f9bd7ccd6","name":"Calendar Agent"},{"parameters":{},"type":"@n8n/n8n-nodes-langchain.toolThink","typeVersion":1,"position":[1840,240],"id":"bf8424e3-2d33-457c-9f15-b3a447219f65","name":"Think"},{"parameters":{"promptType":"define","text":"=# 役割\nあなたは、株式会社アールストリートの「内田」として振る舞う、非常に優秀で細やかな配慮ができるAIアシスタントです。\nあなたの任務は、スケジューリングの状況とメールの文脈を深く理解し、一切、無駄な文章が書かれていないビジネスメールを作成することです。\n\n# 入力情報\nあなたは以下の2つの情報を利用できます。\n## スケジューリング情報 (JSON形式):\n'{{ $json.output }}` から渡される会議調整の「結果ステータス」。\n\n## 元のメール全文:\n`{{ $('Gmail Trigger').item.json.snippet }}` に含まれる、相手からのメール本文。\n\n# 思考プロセスとメール生成ルール\n以下のプロセスに従って、最適なメール本文を生成してください。\n\n## Step 1: 全体状況の把握\nまず、以下の2つの情報を統合して、返信の全体方針を決定します。\n\n1.  スケジューリング情報の確認:\nスケジューリング情報（JSON形式）の`status`を確認し、今回の返信の主要な目的（承諾・代替案提示・確定）を把握します。\n2.  元のメールの文脈分析: \n次に、元のメール全文を精読し、JSONだけではわからない重要な文脈を読み取ります。特に以下の点に注意してください。\n    -   次のアクションは誰が担当するか？\n    -   こちらが回答すべき未解決の質問は含まれているか？\n    -   相手の感謝や気遣いの言葉など、返信に含めるべきニュアンスは何か？\n\n## Step 2: 状況に応じたメール本文の生成\nStep 1で把握した全体状況に基づき、以下のシナリオ別ガイドラインを参考にして、最も自然で矛盾なく、一切無駄な情報が書かれていないメール本文を組み立ててください。\n\n---\n### **シナリオA: `status`が`PROPOSAL_OK`（相手の提案を承諾する）の場合**\n- 感謝の意を伝えます。\n- 承諾する日時をjsonの値に基づいて明確に伝えます。\n---\n### **シナリオB: `status`が`PROPOSAL_NG`（代替案を提示する）の場合**\n- まずお詫びと感謝を伝えます。\n- なぜ調整が難しいかを簡潔に述べます（例: 他の予定と重なっているため）。\n- `alternative_datetimes` の情報を基に、分かりやすく代替案を提示します。\n---\n### **シナリオC: `status`が`CONFIRMED`（日程が確定した）の場合**\n- 日程確定に対する感謝を伝えます。\n- 確定した日時を復唱し、認識が合っていることを確認します。\n- **ここでも同様に、相手が「会議リンクを送る」と明記している場合は、そのことに触れ、「承知いたしました。会議リンクのご送付、お待ちしております。」のように返信し、こちらから送るという旨の文章は含めないでください。**\n---\n\n# 出力例\n鈴木様\n\nお世話になっております。\nアールストリートの内田です。\n\nご提案いただいた日時の中で以下の日程が弊社参加者と都合がつきます。\n- 7月16日（水）10:00-11:00\n\nご確認の程、何卒よろしくお願いいたします。\n\n内田","options":{}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2,"position":[1620,-260],"id":"533e2b22-eae1-457c-bdd8-f1fbdb5841e9","name":"AI Agent2"},{"parameters":{"modelName":"models/gemini-2.5-flash","options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[1600,-40],"id":"0676e46b-bb5f-474f-bc8d-fbb5317673ed","name":"Google Gemini Chat Model2","credentials":{"googlePalmApi":{"id":"NMm1O0ZYMrpQVDiG","name":"Google Gemini(PaLM) Api account 9"}}},{"parameters":{"jsCode":"// ----- 入力 -----\nconst replyPlain = $input.first().json.output;                    // AI が作った本文(プレーン)\nconst originalHtml = $('Gmail Trigger').first().json.html            // 元メール HTML\n                    || $('Gmail Trigger').first().json.text;          // HTML が無ければテキスト\n\n// ----- HTML 形式に整形 -----\nconst replyHtml = replyPlain\n  .replace(/\\n/g, '<br>');                         // 改行を <br> に\n\n// Gmail が自動で折り畳んでくれる \"gmail_quote\" ブロック\nconst quotedHtml = `\n<br><br>\n<div class=\"gmail_quote\">\n  <blockquote class=\"gmail_quote\"\n    style=\"margin:0 0 0 .8ex;border-left:1px solid #ccc;padding-left:1ex\">\n    ${originalHtml}\n  </blockquote>\n</div>`;\n\n// ----- 出力 -----\n// itemオブジェクトを新規作成\nconst item = {\n  message: replyHtml + quotedHtml             // Gmail ノードの message に渡す\n};\n\nreturn item;"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1980,-260],"id":"4edb729f-f16f-4c4a-8552-dd5f76b572c6","name":"Code"},{"parameters":{"resource":"draft","subject":"=RE: {{ $('Gmail Trigger').item.json.subject }}","emailType":"html","message":"={{ $json.message }}","options":{"ccList":"={{ $('Gmail Trigger').item.json.cc.value[0].address }}","replyTo":"={{ $('Gmail Trigger').item.json.from.value[0].address }}","threadId":"={{ $('Gmail Trigger').item.json.threadId }}","sendTo":"={{ $('Gmail Trigger').item.json.from.value[0].address }}"}},"type":"n8n-nodes-base.gmail","typeVersion":2.1,"position":[2140,-260],"id":"34a03197-a4fd-4ddb-acae-b54f6f92583d","name":"Create a draft","webhookId":"bfa75e6a-7dc7-4a8d-a771-4ecb6282cf9a","credentials":{"gmailOAuth2":{"id":"eawXuiOGkVGOyVTm","name":"R STREET"}}}],"connections":{"Gmail Trigger":{"main":[[{"node":"AI Agent","type":"main","index":0}]]},"Google Gemini Chat Model":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"AI Agent":{"main":[[{"node":"If","type":"main","index":0}]]},"If":{"main":[[{"node":"AI Agent1","type":"main","index":0}]]},"Google Gemini Chat Model1":{"ai_languageModel":[[{"node":"AI Agent1","type":"ai_languageModel","index":0}]]},"Contact Agent":{"ai_tool":[[{"node":"AI Agent1","type":"ai_tool","index":0}]]},"Get availability Agent":{"ai_tool":[[{"node":"AI Agent1","type":"ai_tool","index":0}]]},"Research Agent":{"ai_tool":[[{"node":"AI Agent1","type":"ai_tool","index":0}]]},"Calendar Agent":{"ai_tool":[[{"node":"AI Agent1","type":"ai_tool","index":0}]]},"Think":{"ai_tool":[[{"node":"AI Agent1","type":"ai_tool","index":0}]]},"AI Agent1":{"main":[[{"node":"AI Agent2","type":"main","index":0}]]},"Google Gemini Chat Model2":{"ai_languageModel":[[{"node":"AI Agent2","type":"ai_languageModel","index":0}]]},"AI Agent2":{"main":[[{"node":"Code","type":"main","index":0}]]},"Code":{"main":[[{"node":"Create a draft","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"c2ac501c-85c0-45e6-be32-aab0740e4df0","triggerCount":0,"tags":[{"createdAt":"2025-06-19T03:34:48.675Z","updatedAt":"2025-06-19T03:34:48.675Z","id":"lRd7nLlonyK6zPAC","name":"YouTube"}]}